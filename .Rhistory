# You want to make changes to your collaborators figure in Task 5. Maybe you want to create a figure that focuses only on three fish species instead of the 5. More specifically, chromis, lemon, and acantho. Add code here to revise their figure to do that.
data3 <- data2 %>% filter(species == c("chromis", "lemon", "acantho"))
ggplot(data3, aes(x = treatment, y = activity, color = treatment)) + geom_boxplot() + facet_wrap(~species)
# You want to make changes to your collaborators figure in Task 5. Maybe you want to create a figure that focuses only on three fish species instead of the 5. More specifically, chromis, lemon, and acantho. Add code here to revise their figure to do that.
data3 <- data2 %>% filter(species == c("chromis", "lemon", "acantho"))
path <- "./data/OA_activitydat_20190302_BIOL3207.csv"
data <- read.csv(path)
path <- "./output/data/OA_activitydat_20190302_BIOL3207.csv"
write.csv(data, file = path)
library(tidyverse)
library(spelling)
library(plotrix)
sum(is.na(data))
complete.cases(data)
# Code to removing missing data from the `OA_activitydat_20190302_BIOL3207.csv` data frame.
data1 <- data %>% filter(!(is.na(activity))) %>% filter(!(is.na(animal_id)))
# Drop irrelevant columns
data2 <- data1 %>% select(species, treatment, animal_id, activity)
# Check spelling in species and treatment but also generate a summary table
spell_check_files("./data/OA_activitydat_20190302_BIOL3207.csv", lang = "en_US")
data2 %>% count(species)
mean <- aggregate(x = data2$activity,by=list(species = data2$species), mean)
colnames(mean) <- c("species","mean")
std.error <- aggregate(x = data2$activity,by=list(sepcies = data2$species), std.error)
colnames(std.error) <- c("species","std.error")
tab1 <- merge(x = mean, y = std.error)
control <- data2 %>% filter(treatment == "control") %>% count(species)
colnames(control) <- c("species","control")
treated <- data2 %>% filter(treatment == "CO2") %>% count(species)
colnames(treated) <- c("species","treated")
tab2 <- merge(x = control, y = treated)
tab <- merge(x = tab1, y = tab2)
# You want to make changes to your collaborators figure in Task 5. Maybe you want to create a figure that focuses only on three fish species instead of the 5. More specifically, chromis, lemon, and acantho. Add code here to revise their figure to do that.
data3 <- data2 %>% filter(species == c("chromis", "lemon", "acantho"))
ggplot(data3, aes(x = treatment, y = activity, color = treatment)) + geom_boxplot() + facet_wrap(~species)
knitr::opts_chunk$set(echo = TRUE)
options(digits=2)
# Install a load of packages that we'll use. I'll show you a shortcut that I love to use. Try using the p_load function in the "pacman" package. p_load will execute both the install.packages and library commands in one shot so they only need to be used once to install pacman itself.
install.packages("pacman", repos = "http://cran.us.r-project.org")
library(pacman)
# Install bookdown for rendering because we'll need this. While we're at it, lets also install /load the tidyverse
p_load(bookdown, tidyverse, ggforce, flextable, latex2exp, png, magick) # basically just list all the packages you want here
# Code to removing missing data from the `OA_activitydat_20190302_BIOL3207.csv` data frame.
library(tidyverse)
OA <- data %>% filter(!(is.na(activity)))
# Drop irrelevant columns
OA_data <- OA %>% select(species, treatment, animal_id, activity)
# Check spelling in species and treatment but also generate a summary table
library(tidyverse)
OA_data %>% count(species,treatment)
# Use flextable to render the summary table in a tidy format
OA_new <- OA_data %>%group_by(species, treatment)%>%summarise(mean=mean(activity), sd=sd(activity), number=length(activity))
ft <- flextable(OA_new)
ft <- theme_vanilla(ft)
ft <- color(ft, part = "body",color = "#666666")
ft <- set_caption(ft, caption = "Mean, Standard Error And The Sample Sizes")
ft
# Can be calculated with the new code : tapply(OA_data$activity,INDEX=OA_data$species,FUN=mean), tapply(OA_data$activity,INDEX=OA_data$species,FUN=sd)
# ggplot figure showing mean activity for each treatment (Control, OA) for each species.
ggplot(OA_data, mapping = aes(x = species,y=activity,fill=treatment)) + geom_boxplot()
# Use ggsave to save the figure
ggsave("./output/figures/difference.png",width = 10, height = 4)
## Write your answer here
## Add your answer here
install.packages("pacman", repos = "http://cran.us.r-project.org")
# Drop irrelevant columns
OA_data <- OA %>% select(species, treatment, animal_id, activity)
# Check spelling in species and treatment but also generate a summary table
library(tidyverse)
OA_data %>% count(species,treatment)
# Use flextable to render the summary table in a tidy format
OA_new <- OA_data %>%group_by(species, treatment)%>%summarise(mean=mean(activity), sd=sd(activity), number=length(activity))
ft <- flextable(OA_new)
ft <- theme_vanilla(ft)
ft <- color(ft, part = "body",color = "#666666")
ft <- set_caption(ft, caption = "Mean, Standard Error And The Sample Sizes")
ft
# Can be calculated with the new code : tapply(OA_data$activity,INDEX=OA_data$species,FUN=mean), tapply(OA_data$activity,INDEX=OA_data$species,FUN=sd)
# ggplot figure showing mean activity for each treatment (Control, OA) for each species.
ggplot(OA_data, mapping = aes(x = species,y=activity,fill=treatment)) + geom_boxplot()
# You want to make changes to your collaborators figure in Task 5. Maybe you want to create a figure that focuses only on three fish species instead of the 5. More specifically, chromis, lemon, and acantho. Add code here to revise their figure to do that.
OA_sim <- OA_data %>% filter(OA_data$species==c("chromis","lemon","acantho")) %>%  ggplot(OA_data, mapping = aes(x = species,y=activity,fill=treatment)) + geom_boxplot() +labs(title = "collabFig") + facet_wrap(~species)
OA_sim
# You want to make changes to your collaborators figure in Task 5. Maybe you want to create a figure that focuses only on three fish species instead of the 5. More specifically, chromis, lemon, and acantho. Add code here to revise their figure to do that.
OA_sim <- OA_data %>% filter(OA_data$species==c("chromis","lemon","acantho")) %>%  ggplot(OA_data, mapping = aes(x = treatment,y=activity,fill=treatment)) + geom_boxplot() +labs(title = "collabFig") + facet_wrap(~species)
OA_sim
# You want to make changes to your collaborators figure in Task 5. Maybe you want to create a figure that focuses only on three fish species instead of the 5. More specifically, chromis, lemon, and acantho. Add code here to revise their figure to do that.
data3 <- data2 %>% filter(species == c("chromis", "lemon", "acantho"))
ggplot(data3, aes(x = treatment, y = activity, color = treatment)) + geom_boxplot() + labs(title = "collabFig") + facet_wrap(~species)
knitr::opts_chunk$set(echo = TRUE)
options(digits=2)
getwd()
path <- "./data/OA_activitydat_20190302_BIOL3207.csv"
data <- read.csv(path)
path <- "./output/data/OA_activitydat_20190302_BIOL3207.csv"
write.csv(data, file = path)
library(tidyverse)
library(spelling)
library(plotrix)
sum(is.na(data))
complete.cases(data)
# Code to removing missing data from the `OA_activitydat_20190302_BIOL3207.csv` data frame.
data1 <- data %>% filter(!(is.na(activity))) %>% filter(!(is.na(animal_id)))
# Drop irrelevant columns
data2 <- data1 %>% select(species, treatment, animal_id, activity)
# Check spelling in species and treatment but also generate a summary table
spell_check_files("./data/OA_activitydat_20190302_BIOL3207.csv", lang = "en_US")
data2 %>% count(species)
mean <- aggregate(x = data2$activity,by=list(species = data2$species), mean)
colnames(mean) <- c("species","mean")
std.error <- aggregate(x = data2$activity,by=list(sepcies = data2$species), std.error)
colnames(std.error) <- c("species","std.error")
tab1 <- merge(x = mean, y = std.error)
control <- data2 %>% filter(treatment == "control") %>% count(species)
colnames(control) <- c("species","control")
treated <- data2 %>% filter(treatment == "CO2") %>% count(species)
colnames(treated) <- c("species","treated")
tab2 <- merge(x = control, y = treated)
tab <- merge(x = tab1, y = tab2)
# Use flextable to render the summary table in a tidy format
ft <- flextable(tab)
## Write your answer here....remember to use '#" in front of your text.
#The green is what I add into in my code, and the red is what I change in my code.
# ggplot figure showing mean activity for each treatment (Control, OA) for each species.
ggplot(data2, aes(x = treatment, y = activity, color = treatment)) + geom_boxplot() + facet_wrap(~species)
# Install a load of packages that we'll use. I'll show you a shortcut that I love to use. Try using the p_load function in the "pacman" package. p_load will execute both the install.packages and library commands in one shot so they only need to be used once to install pacman itself.
install.packages("pacman", repos = "http://cran.us.r-project.org")
library(pacman)
# Install bookdown for rendering because we'll need this. While we're at it, lets also install /load the tidyverse
p_load(bookdown, tidyverse, ggforce, flextable, latex2exp, png, magick) # basically just list all the packages you want here
Sys.setenv(LANG = "en_US")
# Use flextable to render the summary table in a tidy format
ft <- flextable(tab)
ft
# ggplot figure showing mean activity for each treatment (Control, OA) for each species.
ggplot(data2, aes(x = treatment, y = activity, color = treatment)) + geom_boxplot() + facet_wrap(~species)
# ggplot figure showing mean activity for each treatment (Control, OA) for each species.
ggplot(data2, aes(x = treatment, y = activity, color = treatment)) + annotation_raster(data2, interpolate = FALSE) + geom_point() + geom_jitter() + facet_wrap(~species)
ggplot(data2, aes(x = treatment, y = activity, color = treatment)) + annotation_raster(data2, interpolate = FALSE) + geom_point() + geom_jitter() + facet_wrap(~species)
pics <- readPNG("./pics", "acantho.png", "ambon.png", "chromis.png", "humbug.png", "lemon.png")
pics1 <- readPNG("./pics/acantho.png")
ggplot(data2, aes(x = treatment, y = activity, color = treatment)) + annotation_raster(pics1, interpolate = FALSE) + geom_point() + geom_jitter() + facet_wrap(~species)
ggplot(data2, aes(x = treatment, y = activity, color = treatment)) + annotation_raster(pics1, 0,1,1,2, interpolate = FALSE) + geom_point() + geom_jitter() + facet_wrap(~species)
ggplot(data2, aes(x = treatment, y = activity, color = treatment)) + annotation_raster(pics1, 1,1,1,1, interpolate = FALSE) + geom_point() + geom_jitter() + facet_wrap(~species)
ggplot(data2, aes(x = treatment, y = activity, color = treatment)) + annotation_raster(pics1, 1,1,1,1, interpolate = FALSE) + geom_point() + geom_jitter()
ggplot(data2, aes(x = treatment, y = activity, color = treatment)) + annotation_raster(pics1, 1,1,1,1, interpolate = FALSE) + geom_point() + geom_jitter() + facet_wrap(~species)
ggplot(data2, aes(x = treatment, y = activity, color = treatment)) + annotation_raster(pics1, 1,3,2,4, interpolate = FALSE) + geom_point() + geom_jitter() + facet_wrap(~species)
ggplot(data2, aes(x = treatment, y = activity, color = treatment)) + annotation_raster(pics1, 1,3,2,4, interpolate = FALSE) + geom_boxplot() + geom_jitter() + facet_wrap(~species)
ggplot(data2, aes(x = treatment, y = activity, color = species)) + annotation_raster(pics1, 1,3,2,4, interpolate = FALSE) + geom_boxplot() + geom_jitter()
ggplot(data2, aes(x = treatment, y = activity, color = treatment)) + annotation_raster(pics1, 1,3,2,4, interpolate = FALSE) + geom_boxplot() + geom_jitter()+ facet_wrap(~species)
ggplot(data2, aes(x = treatment, y = activity, color = treatment)) + geom_boxplot() + geom_jitter()+ facet_wrap(~species)
ggplot(data2, aes(x = treatment, y = activity, color = treatment)) + geom_boxplot() + geom_jitter()+ facet_wrap(~species) +  annotation_raster(pics1, 10, 10, 10, 10, interpolate = FALSE)
ggplot(data2, aes(x = treatment, y = activity, color = treatment)) + geom_boxplot() + geom_jitter()+ facet_wrap(~species) +  annotation_raster(pics1, 5, 10, 5, 10, interpolate = FALSE)
ggplot(data2, aes(x = treatment, y = activity, color = treatment)) + geom_boxplot() + geom_jitter()+ facet_wrap(~species) +  annotation_raster(pics1, 5, 20, 5, 20, interpolate = FALSE)
data2 <- data2 %>% filter(!species == "whitedams")
View(data2)
data2 %>% count(species)
# ggplot figure showing mean activity for each treatment (Control, OA) for each species.
ggplot(data2, aes(x = treatment, y = activity, color = treatment)) + geom_boxplot() + facet_wrap(~species)
ggplot(data2, aes(x = treatment, y = activity, color = treatment)) + geom_boxplot() + geom_jitter()+ facet_wrap(~species) +  annotation_raster(pics1, 0.5, 1, 1, 20, interpolate = FALSE)
ggplot(data2, aes(x = species, y = activity, color = treatment)) + geom_boxplot() + geom_jitter()+ facet_wrap(~species) +  annotation_raster(pics1, 0.5, 1, 1, 20, interpolate = FALSE)
ggplot(data2, aes(x = species, y = activity, color = treatment)) + geom_boxplot() + geom_jitter()
ggplot(data2, aes(x = species, y = activity, color = treatment)) + geom_boxplot() + geom_jitter() + annotation_raster(pics1, 0.5, 1, 5, 10, interpolate = FALSE))
ggplot(data2, aes(x = species, y = activity, color = treatment)) + geom_boxplot() + geom_jitter() + annotation_raster(pics1, 0.5, 1, 5, 10, interpolate = FALSE)
ggplot(data2, aes(x = species, y = activity, color = treatment)) + geom_boxplot() + geom_jitter() + annotation_raster(pics1, 0.5, 1.5, 5, 15, interpolate = FALSE)
ggplot(data2, aes(x = species, y = activity, color = treatment)) + geom_boxplot() + geom_jitter() + annotation_raster(pics1, 0.5, 1.5, 5, 15, interpolate = FALSE) + annotation_raster(pics2, 1.5, 2.5, 45, 55, interpolate = FALSE) + annotation_raster(pics3, 2.5, 3.5, 46, 56, interpolate = FALSE) + annotation_raster(pics4, 3.5, 4.5, 5, 15, interpolate = FALSE) + annotation_raster(pics5, 4.5, 5.5, 3, 13, interpolate = FALSE)
pics1 <- readPNG("./pics/acantho.png")
pics2 <- readPNG("./pics/ambon.png"),
pics2 <- readPNG("./pics/ambon.png"),
pics3 <- readPNG("./pics/chromis.png")
pics4 <- readPNG("./pics/humbug.png")
pics5 <- readPNG("./pics/lemon.png")
pics2 <- readPNG("./pics/ambon.png")
pics3 <- readPNG("./pics/chromis.png")
ggplot(data2, aes(x = species, y = activity, color = treatment)) + geom_boxplot() + geom_jitter() + annotation_raster(pics1, 0.5, 1.5, 5, 15, interpolate = FALSE) + annotation_raster(pics2, 1.5, 2.5, 45, 55, interpolate = FALSE) + annotation_raster(pics3, 2.5, 3.5, 46, 56, interpolate = FALSE) + annotation_raster(pics4, 3.5, 4.5, 5, 15, interpolate = FALSE) + annotation_raster(pics5, 4.5, 5.5, 3, 13, interpolate = FALSE)
# Use ggsave to save the figure
getwd()
ggsave('output/figures/activity_by_treatment_species.png',width = 10, height = 6)
# Use ggsave to save the figure
getwd()
ggsave('output/figures/activity_by_treatment_species.png',width = 10, height = 6)
# Drop irrelevant columns
data2 <- data1 %>% select(species, treatment, animal_id, activity)
# Check spelling in species and treatment but also generate a summary table
data2_1 <- data2 %>% filter(!species == "whitedams")
spell_check_files("./data/OA_activitydat_20190302_BIOL3207.csv", lang = "en_US")
data2 %>% count(species)
mean <- aggregate(x = data2$activity,by=list(species = data2$species), mean)
colnames(mean) <- c("species","mean")
std.error <- aggregate(x = data2$activity,by=list(sepcies = data2$species), std.error)
colnames(std.error) <- c("species","std.error")
tab1 <- merge(x = mean, y = std.error)
control <- data2 %>% filter(treatment == "control") %>% count(species)
colnames(control) <- c("species","control")
treated <- data2 %>% filter(treatment == "CO2") %>% count(species)
colnames(treated) <- c("species","treated")
tab2 <- merge(x = control, y = treated)
tab <- merge(x = tab1, y = tab2)
# ggplot figure showing mean activity for each treatment (Control, OA) for each species.
ggplot(data2, aes(x = treatment, y = activity, color = treatment)) + geom_boxplot() + facet_wrap(~species)
pics6 <- readPNG("./pics/whitedams.png")
# ggplot figure showing mean activity for each treatment (Control, OA) for each species.
pics1 <- readPNG("./pics/acantho.png")
pics2 <- readPNG("./pics/ambon.png")
pics3 <- readPNG("./pics/chromis.png")
pics4 <- readPNG("./pics/humbug.png")
pics5 <- readPNG("./pics/lemon.png")
pics6 <- readPNG("./pics/whitedams.png")
ggplot(data2, aes(x = species, y = activity, color = treatment)) + geom_boxplot() + geom_jitter() + annotation_raster(pics1, 0.5, 1.5, 5, 15, interpolate = FALSE) + annotation_raster(pics2, 1.5, 2.5, 45, 55, interpolate = FALSE) + annotation_raster(pics3, 2.5, 3.5, 46, 56, interpolate = FALSE) + annotation_raster(pics4, 3.5, 4.5, 5, 15, interpolate = FALSE) + annotation_raster(pics5, 4.5, 5.5, 3, 13, interpolate = FALSE) + annotation_raster(pics6, 5.5, 6.5, 3, 13, interpolate = FALSE)
data3 <- data2 %>% filter(species == 'acantho')
t.test(data3)
View(data3)
data3 <- data2 %>% filter(species == 'acantho')
t.test(treatment ~ activity, data3)
t.test(data3$treatment ~ data3$activity, data3)
# Add your code here
data3 <- data2 %>% filter(species == 'acantho')
t.test(data3$treatment, data3$activity)
data3 <- data2 %>% filter(species == 'acantho') %>% group_by(treatment)
t.test(data3$treatment, data3$activity)
t.test(data3$activity, data3$treatment)
# Add your code here
data3 <- data2 %>% filter(species == 'acantho') %>% group_by(treatment)
data3 <- data2 %>% filter(species == 'acantho') %>% group_by(treatment)
data3c <- data3 %>% filter(treatment == "control")
data3t <- data3 %>% filter(treatment == "CO2")
t.test(data3$activity, data3$treatment)
t.test(data3c, data3t)
data3c <- data3 %>% filter(treatment == "control")
View(data3c)
t.test(data3c$activity, data3t$activity)
summary(test1)
test1 <- t.test(data3c$activity, data3t$activity)
summary(test1)
sum(test1)
which(test1)
print(test1)
# Add your code here
data3 <- data2 %>% filter(species == 'acantho')
data3c <- data3 %>% filter(treatment == "control")
data3t <- data3 %>% filter(treatment == "CO2")
test1 <- t.test(data3c$activity, data3t$activity)
View(test1)
print(test1)
data4 <- data2 %>% filter(species == 'ambon')
data4c <- data4 %>% filter(treatment == "control")
data4t <- data4 %>% filter(treatment == "CO2")
test2 <- t.test(data3c$activity, data3t$activity)
print(test2)
student <- data.frame("name" = c("张三", "李四", "王五", "马六"),
"score" = c(65, 70, 61, 98))
View(student)
View(test1)
result <- data.frame("number" = c("1", "2", "3", "4", "5", "6"), "p-value" = c(test1$p.value, test2p.value, test3$p.value, test4$p.value, test5$p.value, test6$p.value))
result <- data.frame("number" = c("1", "2", "3", "4", "5", "6"), "p-value" = c(test1$p.value, test2$p.value, test3$p.value, test4$p.value, test5$p.value, test6$p.value))
data3 <- data2 %>% filter(species == 'acantho')
data3c <- data3 %>% filter(treatment == "control")
data3t <- data3 %>% filter(treatment == "CO2")
test1 <- t.test(data3c$activity, data3t$activity)
print(test1)
#ambon
data4 <- data2 %>% filter(species == 'ambon')
data4c <- data4 %>% filter(treatment == "control")
data4t <- data4 %>% filter(treatment == "CO2")
test2 <- t.test(data4c$activity, data4t$activity)
print(test2)
#chromis
data5 <- data2 %>% filter(species == 'ambon')
data5c <- data5 %>% filter(treatment == "control")
data5t <- data5 %>% filter(treatment == "CO2")
test3 <- t.test(data5c$activity, data5t$activity)
print(test3)
#humbug
data6 <- data2 %>% filter(species == 'humbug')
data6c <- data6 %>% filter(treatment == "control")
data6t <- data6 %>% filter(treatment == "CO2")
test4 <- t.test(data6c$activity, data6t$activity)
print(test4)
#lemon
data7 <- data2 %>% filter(species == 'ambon')
data7c <- data7 %>% filter(treatment == "control")
data7t <- data7 %>% filter(treatment == "CO2")
test5 <- t.test(data7c$activity, data7t$activity)
print(test5)
#whitedams
data8 <- data2 %>% filter(species == 'ambon')
data8c <- data8%>% filter(treatment == "control")
data8t <- data8 %>% filter(treatment == "CO2")
test6 <- t.test(data8c$activity, data8t$activity)
print(test6)
result <- data.frame("number" = c("1", "2", "3", "4", "5", "6"), "p-value" = c(test1$p.value, test2$p.value, test3$p.value, test4$p.value, test5$p.value, test6$p.value))
View(result)
result <- data.frame("number" = c("acantho", "ambon", "chromis", "humbug", "lemon", "whitedams"),
"p-value" = c(test1$p.value, test2$p.value, test3$p.value, test4$p.value, test5$p.value, test6$p.value),
"df" = c(test1$df, test2p.df, test3$df, test4$df, test5$df, test6$df))
result <- data.frame("number" = c("acantho", "ambon", "chromis", "humbug", "lemon", "whitedams"),
"p-value" = c(test1$p.value, test2$p.value, test3$p.value, test4$p.value, test5$p.value, test6$p.value),
"df" = c(test1$df, test2$df, test3$df, test4$df, test5$df, test6$df))
"species" = c("acantho", "ambon", "chromis", "humbug", "lemon", "whitedams"),
"species" = c("acantho", "ambon", "chromis", "humbug", "lemon", "whitedams")),
result <- data.frame("species" = c("acantho", "ambon", "chromis", "humbug", "lemon", "whitedams"), "p-value" = c(test1$p.value, test2$p.value, test3$p.value, test4$p.value, test5$p.value, test6$p.value),"df" = c(test1$df, test2$df, test3$df, test4$df, test5$df, test6$df))
"species" = c("acantho", "ambon", "chromis", "humbug", "lemon", "whitedams")
result <- data.frame("species" = c("acantho", "ambon", "chromis", "humbug", "lemon", "whitedams"))
View(result)
result <- data.frame("species" = c("acantho", "ambon", "chromis", "humbug", "lemon", "whitedams")), "p-value" = c(test1$p.value, test2$p.value, test3$p.value, test4$p.value, test5$p.value, test6$p.value),"df" = c(test1$df, test2$df, test3$df, test4$df, test5$df, test6$df))
result <- data.frame("species" = c("acantho", "ambon", "chromis", "humbug", "lemon", "whitedams"), "p-value" = c(test1$p.value, test2$p.value, test3$p.value, test4$p.value, test5$p.value, test6$p.value),"df" = c(test1$df, test2$df, test3$df, test4$df, test5$df, test6$df))
result <- data.frame("species" = c("acantho", "ambon", "chromis", "humbug", "lemon", "whitedams"),
"p-value" = c(test1$p.value, test2$p.value, test3$p.value, test4$p.value, test5$p.value, test6$p.value),"df" = c(test1$df, test2$df, test3$df, test4$df, test5$df, test6$df))
result <- data.frame("species" = c("acantho", "ambon", "chromis", "humbug", "lemon", "whitedams"),
"p-value" = c(test1$p.value, test2$p.value, test3$p.value, test4$p.value, test5$p.value, test6$p.value)
result <- data.frame("species" = c("acantho", "ambon", "chromis", "humbug", "lemon", "whitedams"),
View(result)
result <- data.frame("species" = c("acantho", "ambon", "chromis", "humbug", "lemon", "whitedams"),
"p-value" = c('test1$p.value', 'test2$p.value', 'test3$p.value', 'test4$p.value', 'test5$p.value', 'test6$p.value'),
View(result)
View(result)
test1$statistic
result <- data.frame("species" = c("acantho", "ambon", "chromis", "humbug", "lemon", "whitedams"),
"p-value" = c('test1$p.value', 'test2$p.value', 'test3$p.value', 'test4$p.value', 'test5$p.value', 'test6$p.value'),
"parameter" = c(test1$parameter, test2$parameter, test3$parameter, test4$parameter, test5$parameter, test6$parameter))
View(result)
result <- data.frame("species" = c("acantho", "ambon", "chromis", "humbug", "lemon", "whitedams"),
"p-value" = c(test1$p.value, test2$p.value, test3$p.value, test4$p.value, test5$p.value, test6$p.value),
"parameter" = c(test1$parameter, test2$parameter, test3$parameter, test4$parameter, test5$parameter, test6$parameter))
result <- data.frame("species" = c("acantho", "ambon", "chromis", "humbug", "lemon", "whitedams"),
"p-value" = c(test1$p.value, test2$p.value, test3$p.value, test4$p.value, test5$p.value, test6$p.value),
"df" = c(test1$parameter, test2$parameter, test3$parameter, test4$parameter, test5$parameter, test6$parameter),
"t-statistic"= c(test1$statistic, test2$statistic, test3$statistic, test4$statistic, test5$statistic, test6$statistic),
"95% confidence intervals" = c(test1$conf.int, test2$conf.int, test3$conf.int, test4$conf.int, test5$conf.int, test6$conf.int),
"the difference in means" = c(test1$null.value, test2$null.value, test3$null.value, test4$null.value, test5$null.value, test6$null.value))
print(test5)
result <- data.frame("species" = c("acantho", "ambon", "chromis", "humbug", "lemon", "whitedams"),
"p-value" = c(test1$p.value, test2$p.value, test3$p.value, test4$p.value, test5$p.value, test6$p.value),
"df" = c(test1$parameter, test2$parameter, test3$parameter, test4$parameter, test5$parameter, test6$parameter),
"t-statistic"= c(test1$statistic, test2$statistic, test3$statistic, test4$statistic, test5$statistic, test6$statistic),
"95% confidence intervals" = c(test1$conf.int, test2$conf.int, test3$conf.int, test4$conf.int, test5$conf.int, test6$conf.int),
"the difference in means" = c(test1$estimate, test2$estimate, test3$estimate, test4$estimate, test5$estimate, test6$estimate))
View(result)
result <- data.frame("species" = c("acantho", "ambon", "chromis", "humbug", "lemon", "whitedams"),
"p-value" = c(test1$p.value, test2$p.value, test3$p.value, test4$p.value, test5$p.value, test6$p.value),
"df" = c(test1$parameter, test2$parameter, test3$parameter, test4$parameter, test5$parameter, test6$parameter),
"t-statistic"= c(test1$statistic, test2$statistic, test3$statistic, test4$statistic, test5$statistic, test6$statistic),
"95% confidence intervals" = c(test1$conf.int, test2$conf.int, test3$conf.int, test4$conf.int, test5$conf.int, test6$conf.int),
"the difference in means" = c(test1$null.value, test2$null.value, test3$null.value, test4$null.value, test5$null.value, test6$null.value))
# Using the resulting object created above, which should be a table with all the summary statistics, t, df and p-value for each species create a table. Note that there is a tab.cap argument in the chunk arguments. Write a caption here.
result <- data.frame("species" = c("acantho", "ambon", "chromis", "humbug", "lemon", "whitedams"),
"p-value" = c(test1$p.value, test2$p.value, test3$p.value, test4$p.value, test5$p.value, test6$p.value),
"df" = c(test1$parameter, test2$parameter, test3$parameter, test4$parameter, test5$parameter, test6$parameter),
"t-statistic"= c(test1$statistic, test2$statistic, test3$statistic, test4$statistic, test5$statistic, test6$statistic),
"95% confidence intervals" = c(test1$conf.int, test2$conf.int, test3$conf.int, test4$conf.int, test5$conf.int, test6$conf.int),
"the difference in means" = c(test1$null.value, test2$null.value, test3$null.value, test4$null.value, test5$null.value, test6$null.value))
View(result)
data5 <- data2 %>% filter(species == 'ambon')
data5c <- data5 %>% filter(treatment == "control")
data5t <- data5 %>% filter(treatment == "CO2")
test3 <- t.test(data5c$activity, data5t$activity)
print(test3)
View(test3)
View(data5)
data5 <- data2 %>% filter(species == 'chromis')
data5c <- data5 %>% filter(treatment == "control")
data5t <- data5 %>% filter(treatment == "CO2")
test3 <- t.test(data5c$activity, data5t$activity)
print(test3)
View(data5)
# Using the resulting object created above, which should be a table with all the summary statistics, t, df and p-value for each species create a table. Note that there is a tab.cap argument in the chunk arguments. Write a caption here.
result <- data.frame("species" = c("acantho", "ambon", "chromis", "humbug", "lemon", "whitedams"),
"p-value" = c(test1$p.value, test2$p.value, test3$p.value, test4$p.value, test5$p.value, test6$p.value),
"df" = c(test1$parameter, test2$parameter, test3$parameter, test4$parameter, test5$parameter, test6$parameter),
"t-statistic"= c(test1$statistic, test2$statistic, test3$statistic, test4$statistic, test5$statistic, test6$statistic),
"95% confidence intervals" = c(test1$conf.int, test2$conf.int, test3$conf.int, test4$conf.int, test5$conf.int, test6$conf.int),
"the difference in means" = c(test1$null.value, test2$null.value, test3$null.value, test4$null.value, test5$null.value, test6$null.value))
View(result)
# Using the resulting object created above, which should be a table with all the summary statistics, t, df and p-value for each species create a table. Note that there is a tab.cap argument in the chunk arguments. Write a caption here.
result <- data.frame("species" = c("acantho", "ambon", "chromis", "humbug", "lemon", "whitedams"),
"p-value" = c(test1$p.value, test2$p.value, test3$p.value, test4$p.value, test5$p.value, test6$p.value),
"df" = c(test1$parameter, test2$parameter, test3$parameter, test4$parameter, test5$parameter, test6$parameter),
"t-statistic"= c(test1$statistic, test2$statistic, test3$statistic, test4$statistic, test5$statistic, test6$statistic),
"95% confidence intervals" = c(test1$conf.int, test2$conf.int, test3$conf.int, test4$conf.int, test5$conf.int, test6$conf.int),
"the difference in means" = c(test1$null.value, test2$null.value, test3$null.value, test4$null.value, test5$null.value, test6$null.value))
View(result)
result <- data.frame("species" = c("acantho", "ambon", "chromis", "humbug", "lemon", "whitedams"),
"p-value" = c(test1$p.value, test2$p.value, test3$p.value, test4$p.value, test5$p.value, test6$p.value),
"df" = c(test1$parameter, test2$parameter, test3$parameter, test4$parameter, test5$parameter, test6$parameter),
"t-statistic"= c(test1$statistic, test2$statistic, test3$statistic, test4$statistic, test5$statistic, test6$statistic),
"95% confidence intervals" = c(test1$conf.int, test2$conf.int, test3$conf.int, test4$conf.int, test5$conf.int, test6$conf.int),
"the difference in means" = c(test1$null.value, test2$null.value, test3$null.value, test4$null.value, test5$null.value, test6$null.value))
View(result)
result <- data.frame("number" = c('1', '2', '3', '4', '5', '6'),
"species" = c("acantho", "ambon", "chromis", "humbug", "lemon", "whitedams"),
"p-value" = c(test1$p.value, test2$p.value, test3$p.value, test4$p.value, test5$p.value, test6$p.value),
"df" = c(test1$parameter, test2$parameter, test3$parameter, test4$parameter, test5$parameter, test6$parameter),
"t-statistic"= c(test1$statistic, test2$statistic, test3$statistic, test4$statistic, test5$statistic, test6$statistic),
"95% confidence intervals" = c(test1$conf.int, test2$conf.int, test3$conf.int, test4$conf.int, test5$conf.int, test6$conf.int),
"the difference in means" = c(test1$null.value, test2$null.value, test3$null.value, test4$null.value, test5$null.value, test6$null.value))
View(result)
# Using the resulting object created above, which should be a table with all the summary statistics, t, df and p-value for each species create a table. Note that there is a tab.cap argument in the chunk arguments. Write a caption here.
result <- data.frame("number" = c('1', '2', '3', '4', '5', '6'),
"species" = c("acantho", "ambon", "chromis", "humbug", "lemon", "whitedams"),
"p-value" = c(test1$p.value, test2$p.value, test3$p.value, test4$p.value, test5$p.value, test6$p.value),
"df" = c(test1$parameter, test2$parameter, test3$parameter, test4$parameter, test5$parameter, test6$parameter),
"t-statistic"= c(test1$statistic, test2$statistic, test3$statistic, test4$statistic, test5$statistic, test6$statistic),
"95% confidence intervals" = c(test1$conf.int, test2$conf.int, test3$conf.int, test4$conf.int, test5$conf.int, test6$conf.int),
"the difference in means" = c(test1$null.value, test2$null.value, test3$null.value, test4$null.value, test5$null.value, test6$null.value))
View(result)
result <- data.frame(species, p-value, df, t-statistic, 95% confidence intervals, the difference in means)
species <- c("acantho", "ambon", "chromis", "humbug", "lemon", "whitedams")
p-value = c(test1$p.value, test2$p.value, test3$p.value, test4$p.value, test5$p.value, test6$p.value)
species <- c("acantho", "ambon", "chromis", "humbug", "lemon", "whitedams")
p-value <- c(test1$p.value, test2$p.value, test3$p.value, test4$p.value, test5$p.value, test6$p.value)
p-value <- c(test1$p.value, test2$p.value, test3$p.value, test4$p.value, test5$p.value, test6$p.value)
df <- c(test1$parameter, test2$parameter, test3$parameter, test4$parameter, test5$parameter, test6$parameter)
t-statistic <- c(test1$statistic, test2$statistic, test3$statistic, test4$statistic, test5$statistic, test6$statistic)
p.value <- c(test1$p.value, test2$p.value, test3$p.value, test4$p.value, test5$p.value, test6$p.value)
t.statistic <- c(test1$statistic, test2$statistic, test3$statistic, test4$statistic, test5$statistic, test6$statistic)
95% confidence intervals <- c(test1$conf.int, test2$conf.int, test3$conf.int, test4$conf.int, test5$conf.int, test6$conf.int)
confidence intervals <- c(test1$conf.int, test2$conf.int, test3$conf.int, test4$conf.int, test5$conf.int, test6$conf.int)
confidence.intervals <- c(test1$conf.int, test2$conf.int, test3$conf.int, test4$conf.int, test5$conf.int, test6$conf.int)
difference.in.means <- c(test1$null.value, test2$null.value, test3$null.value, test4$null.value, test5$null.value, test6$null.value)
result <- data.frame(species, p.value, df, t.statistic, confidence.intervals, difference.in.means)
View(result)
View(result)
View(result)
result <- data.frame(species, p.value, df, t.statistic, confidence.intervals, difference.in.means)
confidence.intervals <- c([test1$conf.int], [test2$conf.int], [test3$conf.int], [test4$conf.int], [test5$conf.int], [test6$conf.int])
test6$conf.int
sum(test6$conf.int)
which(test6$conf.int)
p.value <- c(test1$p.value, test2$p.value, test3$p.value, test4$p.value, test5$p.value, test6$p.value)
df <- c(test1$parameter, test2$parameter, test3$parameter, test4$parameter, test5$parameter, test6$parameter)
t.statistic <- c(test1$statistic, test2$statistic, test3$statistic, test4$statistic, test5$statistic, test6$statistic)
confidence.interval1 <- c(test1$conf.int, test2$conf.int, test3$conf.int, test4$conf.int, test5$conf.int, test6$conf.int)
confidence.interval2<- c(test1$conf.int, test2$conf.int, test3$conf.int, test4$conf.int, test5$conf.int, test6$conf.int)
difference.in.means <- c(test1$null.value, test2$null.value, test3$null.value, test4$null.value, test5$null.value, test6$null.value)
result <- data.frame(species, p.value, df, t.statistic, confidence.intervals, difference.in.means)
View(result)
result <- data.frame(species, p.value, df, t.statistic, confidence.intervals1, confidence.intervals2 difference.in.means)
result <- data.frame(species, p.value, df, t.statistic, confidence.intervals1, confidence.intervals2, difference.in.means)
min(test1$conf.int)
max(test1$conf.int)
min(test3$conf.int)
View(test4)
min(test4$conf.int)
confidence.interval1 <- c(min(test1$conf.int), min(test2$conf.int), min(test3$conf.int), min(test4$conf.int), min(test5$conf.int), min(test6$conf.int))
confidence.interval1 <- c(min(test1$conf.int), min(test2$conf.int), min(test3$conf.int), min(test4$conf.int), min(test5$conf.int), min(test6$conf.int))
confidence.interval2<- c(max(test1$conf.int), max(test2$conf.int), max(test3$conf.int), max(test4$conf.int), max(test5$conf.int), max(test6$conf.int))
result <- data.frame(species, p.value, df, t.statistic, confidence.intervals1, confidence.intervals2, difference.in.means)
result <- data.frame(species, p.value, df, t.statistic, confidence.intervals1, confidence.intervals2, difference.in.means)
species <- c("acantho", "ambon", "chromis", "humbug", "lemon", "whitedams")
p.value <- c(test1$p.value, test2$p.value, test3$p.value, test4$p.value, test5$p.value, test6$p.value)
df <- c(test1$parameter, test2$parameter, test3$parameter, test4$parameter, test5$parameter, test6$parameter)
t.statistic <- c(test1$statistic, test2$statistic, test3$statistic, test4$statistic, test5$statistic, test6$statistic)
confidence.interval1 <- c(min(test1$conf.int), min(test2$conf.int), min(test3$conf.int), min(test4$conf.int), min(test5$conf.int), min(test6$conf.int))
confidence.interval2<- c(max(test1$conf.int), max(test2$conf.int), max(test3$conf.int), max(test4$conf.int), max(test5$conf.int), max(test6$conf.int))
difference.in.means <- c(test1$null.value, test2$null.value, test3$null.value, test4$null.value, test5$null.value, test6$null.value)
result <- data.frame(species, p.value, df, t.statistic, confidence.intervals1, confidence.intervals2, difference.in.means)
species <- c("acantho", "ambon", "chromis", "humbug", "lemon", "whitedams")
p.value <- c(test1$p.value, test2$p.value, test3$p.value, test4$p.value, test5$p.value, test6$p.value)
df <- c(test1$parameter, test2$parameter, test3$parameter, test4$parameter, test5$parameter, test6$parameter)
t.statistic <- c(test1$statistic, test2$statistic, test3$statistic, test4$statistic, test5$statistic, test6$statistic)
confi1 <- c(min(test1$conf.int), min(test2$conf.int), min(test3$conf.int), min(test4$conf.int), min(test5$conf.int), min(test6$conf.int))
confi2<- c(max(test1$conf.int), max(test2$conf.int), max(test3$conf.int), max(test4$conf.int), max(test5$conf.int), max(test6$conf.int))
difference.in.means <- c(test1$null.value, test2$null.value, test3$null.value, test4$null.value, test5$null.value, test6$null.value)
result <- data.frame(species, p.value, df, t.statistic, confi1, confi2, difference.in.means)
View(result)
# acantho
data3 <- data2 %>% filter(species == 'acantho')
data3c <- data3 %>% filter(treatment == "control")
data3t <- data3 %>% filter(treatment == "CO2")
test1 <- t.test(data3c$activity, data3t$activity)
print(test1)
#ambon
data4 <- data2 %>% filter(species == 'ambon')
data4c <- data4 %>% filter(treatment == "control")
data4t <- data4 %>% filter(treatment == "CO2")
test2 <- t.test(data4c$activity, data4t$activity)
print(test2)
#chromis
data5 <- data2 %>% filter(species == 'chromis')
data5c <- data5 %>% filter(treatment == "control")
data5t <- data5 %>% filter(treatment == "CO2")
test3 <- t.test(data5c$activity, data5t$activity)
print(test3)
#humbug
data6 <- data2 %>% filter(species == 'humbug')
data6c <- data6 %>% filter(treatment == "control")
data6t <- data6 %>% filter(treatment == "CO2")
test4 <- t.test(data6c$activity, data6t$activity)
print(test4)
#lemon
data7 <- data2 %>% filter(species == 'lemon')
data7c <- data7 %>% filter(treatment == "control")
data7t <- data7 %>% filter(treatment == "CO2")
test5 <- t.test(data7c$activity, data7t$activity)
print(test5)
#whitedams
data8 <- data2 %>% filter(species == 'whitedams')
data8c <- data8%>% filter(treatment == "control")
data8t <- data8 %>% filter(treatment == "CO2")
test6 <- t.test(data8c$activity, data8t$activity)
print(test6)
# Using the resulting object created above, which should be a table with all the summary statistics, t, df and p-value for each species create a table. Note that there is a tab.cap argument in the chunk arguments. Write a caption here.
species <- c("acantho", "ambon", "chromis", "humbug", "lemon", "whitedams")
p.value <- c(test1$p.value, test2$p.value, test3$p.value, test4$p.value, test5$p.value, test6$p.value)
df <- c(test1$parameter, test2$parameter, test3$parameter, test4$parameter, test5$parameter, test6$parameter)
t.statistic <- c(test1$statistic, test2$statistic, test3$statistic, test4$statistic, test5$statistic, test6$statistic)
confi1 <- c(min(test1$conf.int), min(test2$conf.int), min(test3$conf.int), min(test4$conf.int), min(test5$conf.int), min(test6$conf.int))
confi2<- c(max(test1$conf.int), max(test2$conf.int), max(test3$conf.int), max(test4$conf.int), max(test5$conf.int), max(test6$conf.int))
difference.in.means <- c(test1$null.value, test2$null.value, test3$null.value, test4$null.value, test5$null.value, test6$null.value)
result <- data.frame(species, p.value, df, t.statistic, confi1, confi2, difference.in.means)
##ps: confi1 ~ confi2 is the 95% confidence interval
View(test1)
