Sys.setenv(LANG = "en_US")
knitr::opts_chunk$set(echo = TRUE)
options(digits=2)
## Write your answer here.
Everytime I need to modify my code, I need to save it on my own computer, save it on GitHub Desktop and upload it into the GitHub websites. So it can not be automatically change on the GitHub website and record each steps of mordification. While other cloud storage system can automatically save my changes.
## Write your answer here.
Everytime I need to modify my code, I need to save it on my own computer, save it on GitHub Desktop and upload it into the GitHub websites. So it can not be automatically change on the GitHub website and record each steps of mordification. While other cloud storage system can automatically save my changes.
path <- "./data/OA_activitydat_20190302_BIOL3207.csv"
data <- read.csv(path)
path <- "./data/OA_activitydat_20190302_BIOL3207.csv"
data <- read.csv(path)
path <- "./output/data/OA_activitydat_20190302_BIOL3207.csv"
write.csv(data, file = path)
library(tidyverse)
sum(is.na(data))
complete.cases(data)
library(tidyverse)
sum(is.na(data))
complete.cases(data)
path <- "./output/data/OA_activitydat_20190302_BIOL3207.csv"
write.csv(data, file = path)
library(tidyverse)
sum(is.na(data))
complete.cases(data)
knitr::opts_chunk$set(echo = TRUE)
options(digits=2)
getwd()
path <- "./data/OA_activitydat_20190302_BIOL3207.csv"
data <- read.csv(path)
path <- "./output/data/OA_activitydat_20190302_BIOL3207.csv"
write.csv(data, file = path)
library(tidyverse)
sum(is.na(data))
complete.cases(data)
# Code to removing missing data from the `OA_activitydat_20190302_BIOL3207.csv` data frame.
data1 <- data %>% filter(!(is.na(activity))) %>% filter(!(is.na(animal_id)))
# Check spelling in species and treatment but also generate a summary table
spell_check_files(data2)
install.packages(hunspell)
install.packages('hunspell')
Sys.setenv(LANG = "en_US")
library('hunspell')
# Check spelling in species and treatment but also generate a summary table
spell_check_files(data2)
# Check spelling in species and treatment but also generate a summary table
hunspell(data2)
data2 <- data1 %>% select(species, treatment)
# Check spelling in species and treatment but also generate a summary table
hunspell(data2)
View(data2)
# Check spelling in species and treatment but also generate a summary table
check_spelling_interactive(data2$species)
# Check spelling in species and treatment but also generate a summary table
check_spelling(data2$species)
# Check spelling in species and treatment but also generate a summary table
which.misspelled(data2$species)
install.packages("spelling")
# Check spelling in species and treatment but also generate a summary table
which.misspelled(data2$species)
# Drop irrelevant columns
data2 <- data1 %>% select(species, treatment)
# Check spelling in species and treatment but also generate a summary table
spell_check_files(data2$species)
library(tidyverse)
library(spelling)
sum(is.na(data))
complete.cases(data)
library(tidyverse)
library(spelling)
# Drop irrelevant columns
data2 <- data1 %>% select(species, treatment)
# Check spelling in species and treatment but also generate a summary table
spell_check_files(data2$species)
# Drop irrelevant columns
data2 <- data1 %>% select(species, treatment)
# Check spelling in species and treatment but also generate a summary table
spell_check_files(data2)
# Drop irrelevant columns
data2 <- data1 %>% select(species, treatment)
# Check spelling in species and treatment but also generate a summary table
spell_check_files("./data/OA_activitydat_20190302_BIOL3207.csv")
# Use flextable to render the summary table in a tidy format
# Drop irrelevant columns
data2 <- data1 %>% select(species, treatment)
# Check spelling in species and treatment but also generate a summary table
spell_check_files("./data/OA_activitydat_20190302_BIOL3207.csv", lang = "en_US")
# Use flextable to render the summary table in a tidy format
summary(data2)
# Drop irrelevant columns
data2 <- data1 %>% select(species, treatment)
# Check spelling in species and treatment but also generate a summary table
spell_check_files("./data/OA_activitydat_20190302_BIOL3207.csv", lang = "en_US")
summary(data2$species)
# Use flextable to render the summary table in a tidy format
View(data1)
# Drop irrelevant columns
data2 <- data1 %>% select(species, treatment, animal_id, activity)
# Check spelling in species and treatment but also generate a summary table
spell_check_files("./data/OA_activitydat_20190302_BIOL3207.csv", lang = "en_US")
summary(data1$)
summary(data2$activity)
install.packages("plotrix")
library("plotrix")
library(tidyverse)
library(spelling)
library(plotrix)
mean(data2$activity)
ste.data2 <- std.error(data2$activity)
count(species)
count(data2$species)
data2 %>% count(species)
m.data2 <- cummean(data2$activity)
m.data2 <- cummean(data2$activity)
print(m.data2)
data2 %>% count(species)
m.data2 <- mean(data2 %>% filter(species = "acantho") %>% select(activity))
m.data2 <- mean(data2 %>% filter(species = "acantho") %>% select(activity))
data2 %>% count(species)
m.data2 <- mean(data2 %>% filter(species = "acantho") %>% select(activity))
m.data2 <- mean(data2 %>% filter(species == "acantho") %>% select(activity))
print(m.data2)
aggregate(data2$activity, by=list(species=data2$species), mean)
aggregate(data2$activity,by=list(species=data2$species), mean)
aggregate(data2$activity,by=list(data2$species), mean)
aggregate(data2$activity,by=list(data2$species), sde)
aggregate(data2$activity,by=list(data2$species), std.error)
tab1 <- table(data2$species, mean, std.error)
tab1 <- table(data2$species, c(mean, std.error))
mean <- aggregate(data2$activity,by=list(data2$species), mean)
View(mean)
std.error <- aggregate(data2$activity,by=list(data2$species), std.error)
tab <- bind_rows(mean, std.error)
View(tab)
View(std.error)
tab <- rbind(mean, std.error)
View(tab)
tab <- left_join(mean, std.error)
tab <- mean %>% left_join(mean, std.error)
tab <- mean %>% right_join(std.error)
tab <- mean %>% right_join(x=std.error)
tab <- merge(x = mean, y = std.error)
View(tab)
tab <- merge(x = mean, y = std.error)
View(tab)
View(mean)
View(std.error)
aggregate(data2$activity,by=list(sepcies = data2$species), std.error)
std.error <- aggregate(data2$activity,by=list(sepcies = data2$species), std.error)
View(std.error)
mean <- aggregate(data2$activity,by=list(species = data2$species), mean)
mean <- aggregate(data2$activity,by=list(species = data2$species), mean, x= mean)
tab <- merge(x = mean, y = std.error)
View(tab)
mean <- aggregate(x = data2$activity,by=list(species = data2$species), mean)
View(mean)
summarise(mean, std.error)
summarise(mean, std.error)
View(mean)
data.columns[species, mean]
pd.read_csv('mean', names = c("species", "mean"), header=0)
name(mean) <- c("species","mean")
colnames(mean) <- c("species","mean")
colnames(std.error) <- c("species","std.error")
tab <- merge(x = mean, y = std.error)
View(tab)
ft <- flextable(tab)
# Drop irrelevant columns
data2 <- data1 %>% select(species, treatment, animal_id, activity)
# Check spelling in species and treatment but also generate a summary table
spell_check_files("./data/OA_activitydat_20190302_BIOL3207.csv", lang = "en_US")
data2 %>% count(species)
mean <- aggregate(x = data2$activity,by=list(species = data2$species), mean)
colnames(mean) <- c("species","mean")
std.error <- aggregate(x = data2$activity,by=list(sepcies = data2$species), std.error)
colnames(std.error) <- c("species","std.error")
tab <- merge(x = mean, y = std.error)
# Use flextable to render the summary table in a tidy format
ft <- flextable(tab)
ft <- flextable(tab)
library(tidyverse)
library(spelling)
library(plotrix)
# Drop irrelevant columns
data2 <- data1 %>% select(species, treatment, animal_id, activity)
# Check spelling in species and treatment but also generate a summary table
spell_check_files("./data/OA_activitydat_20190302_BIOL3207.csv", lang = "en_US")
data2 %>% count(species)
mean <- aggregate(x = data2$activity,by=list(species = data2$species), mean)
colnames(mean) <- c("species","mean")
std.error <- aggregate(x = data2$activity,by=list(sepcies = data2$species), std.error)
colnames(std.error) <- c("species","std.error")
tab <- merge(x = mean, y = std.error)
# Use flextable to render the summary table in a tidy format
ft <- flextable(tab)
# Use flextable to render the summary table in a tidy format
ft <- flextable(tab)
# Use flextable to render the summary table in a tidy format
ft <- flextable(tab)
# Drop irrelevant columns
data2 <- data1 %>% select(species, treatment, animal_id, activity)
# Check spelling in species and treatment but also generate a summary table
spell_check_files("./data/OA_activitydat_20190302_BIOL3207.csv", lang = "en_US")
data2 %>% count(species)
mean <- aggregate(x = data2$activity,by=list(species = data2$species), mean)
colnames(mean) <- c("species","mean")
std.error <- aggregate(x = data2$activity,by=list(sepcies = data2$species), std.error)
colnames(std.error) <- c("species","std.error")
tab <- merge(x = mean, y = std.error)
# Drop irrelevant columns
data2 <- data1 %>% select(species, treatment, animal_id, activity)
# Check spelling in species and treatment but also generate a summary table
spell_check_files("./data/OA_activitydat_20190302_BIOL3207.csv", lang = "en_US")
data2 %>% count(species)
mean <- aggregate(x = data2$activity,by=list(species = data2$species), mean)
colnames(mean) <- c("species","mean")
std.error <- aggregate(x = data2$activity,by=list(sepcies = data2$species), std.error)
colnames(std.error) <- c("species","std.error")
tab <- merge(x = mean, y = std.error)
View(tab)
# Use flextable to render the summary table in a tidy format
ft <- flextable(tab)
ft <- flextable(tab)
tab <- merge(x = mean, y = std.error)
View(tab)
View(data2)
control <- data2 %>% filter(treatment = "control") %>% count(species)
control <- data2 %>% filter(treatment == "control") %>% count(species)
View(control)
olnames(mean) <- c("species","control")
colnames(control) <- c("species","control")
data2 %>% count(species)
mean <- aggregate(x = data2$activity,by=list(species = data2$species), mean)
colnames(mean) <- c("species","mean")
std.error <- aggregate(x = data2$activity,by=list(sepcies = data2$species), std.error)
colnames(std.error) <- c("species","std.error")
control <- data2 %>% filter(treatment == "control") %>% count(species)
colnames(control) <- c("species","control")
treated <- data2 %>% filter(treatment == "CO2") %>% count(species)
colnames(control) <- c("species","treated")
tab <- merge(x = mean, y = std.error, z = control, t = treated)
View(tab)
tab1 <- merge(x = mean, y = std.error)
tab2 <- merge(x = control, y = treated)
tab(x=tab1, y = tab2)
# Drop irrelevant columns
data2 <- data1 %>% select(species, treatment, animal_id, activity)
# Check spelling in species and treatment but also generate a summary table
spell_check_files("./data/OA_activitydat_20190302_BIOL3207.csv", lang = "en_US")
data2 %>% count(species)
mean <- aggregate(x = data2$activity,by=list(species = data2$species), mean)
colnames(mean) <- c("species","mean")
std.error <- aggregate(x = data2$activity,by=list(sepcies = data2$species), std.error)
colnames(std.error) <- c("species","std.error")
tab1 <- merge(x = mean, y = std.error)
control <- data2 %>% filter(treatment == "control") %>% count(species)
colnames(control) <- c("species","control")
treated <- data2 %>% filter(treatment == "CO2") %>% count(species)
colnames(control) <- c("species","treated")
tab2 <- merge(x = control, y = treated)
tab <- merge(x = tab1, y = tab2)
View(tab)
# Drop irrelevant columns
data2 <- data1 %>% select(species, treatment, animal_id, activity)
# Check spelling in species and treatment but also generate a summary table
spell_check_files("./data/OA_activitydat_20190302_BIOL3207.csv", lang = "en_US")
data2 %>% count(species)
mean <- aggregate(x = data2$activity,by=list(species = data2$species), mean)
colnames(mean) <- c("species","mean")
std.error <- aggregate(x = data2$activity,by=list(sepcies = data2$species), std.error)
colnames(std.error) <- c("species","std.error")
tab1 <- merge(x = mean, y = std.error)
control <- data2 %>% filter(treatment == "control") %>% count(species)
colnames(control) <- c("species","control")
treated <- data2 %>% filter(treatment == "CO2") %>% count(species)
colnames(control) <- c("species","treated")
tab2 <- merge(x = control, y = treated)
tab <- merge(x = tab1, y = tab2)
View(tab2)
colnames(control) <- c("species","control")
View(control)
tab2 <- merge(x = control, y = treated)
tab <- merge(x = tab1, y = tab2)
View(tab2)
colnames(control) <- c("species","control")
View(control)
tab1 <- merge(x = mean, y = std.error)
control <- data2 %>% filter(treatment == "control") %>% count(species)
colnames(control) <- c("species","control")
treated <- data2 %>% filter(treatment == "CO2") %>% count(species)
colnames(treated) <- c("species","treated")
tab2 <- merge(x = control, y = treated)
tab <- merge(x = tab1, y = tab2)
View(tab)
ft <- flextable(tab)
# Use flextable to render the summary table in a tidy format
ft <- flextable(tab)
knitr::opts_chunk$set(echo = TRUE)
options(digits=2)
# Install a load of packages that we'll use. I'll show you a shortcut that I love to use. Try using the p_load function in the "pacman" package. p_load will execute both the install.packages and library commands in one shot so they only need to be used once to install pacman itself.
install.packages("pacman", repos = "http://cran.us.r-project.org")
library(pacman)
# Install bookdown for rendering because we'll need this. While we're at it, lets also install /load the tidyverse
p_load(bookdown, tidyverse, ggforce, flextable, latex2exp, png, magick) # basically just list all the packages you want here
getwd()
library(tidyverse)
library(spelling)
library(plotrix)
sum(is.na(data))
complete.cases(data)
knitr::opts_chunk$set(echo = TRUE)
options(digits=2)
# Install a load of packages that we'll use. I'll show you a shortcut that I love to use. Try using the p_load function in the "pacman" package. p_load will execute both the install.packages and library commands in one shot so they only need to be used once to install pacman itself.
install.packages("pacman", repos = "http://cran.us.r-project.org")
library(pacman)
# Install bookdown for rendering because we'll need this. While we're at it, lets also install /load the tidyverse
p_load(bookdown, tidyverse, ggforce, flextable, latex2exp, png, magick) # basically just list all the packages you want here
getwd()
library(tidyverse)
library(spelling)
library(plotrix)
sum(is.na(data))
complete.cases(data)
install.packages("pacman", repos = "http://cran.us.r-project.org")
knitr::opts_chunk$set(echo = TRUE)
options(digits=2)
sum(is.na(data))
complete.cases(data)
path <- "./output/data/OA_activitydat_20190302_BIOL3207.csv"
write.csv(data, file = path)
path <- "./data/OA_activitydat_20190302_BIOL3207.csv"
data <- read.csv(path)
path <- "./output/data/OA_activitydat_20190302_BIOL3207.csv"
write.csv(data, file = path)
sum(is.na(data))
complete.cases(data)
# Code to removing missing data from the `OA_activitydat_20190302_BIOL3207.csv` data frame.
data1 <- data %>% filter(!(is.na(activity))) %>% filter(!(is.na(animal_id)))
library(tidyverse)
library(spelling)
library(plotrix)
# Code to removing missing data from the `OA_activitydat_20190302_BIOL3207.csv` data frame.
data1 <- data %>% filter(!(is.na(activity))) %>% filter(!(is.na(animal_id)))
# Drop irrelevant columns
data2 <- data1 %>% select(species, treatment, animal_id, activity)
# Check spelling in species and treatment but also generate a summary table
spell_check_files("./data/OA_activitydat_20190302_BIOL3207.csv", lang = "en_US")
data2 %>% count(species)
mean <- aggregate(x = data2$activity,by=list(species = data2$species), mean)
colnames(mean) <- c("species","mean")
std.error <- aggregate(x = data2$activity,by=list(sepcies = data2$species), std.error)
colnames(std.error) <- c("species","std.error")
tab1 <- merge(x = mean, y = std.error)
control <- data2 %>% filter(treatment == "control") %>% count(species)
colnames(control) <- c("species","control")
treated <- data2 %>% filter(treatment == "CO2") %>% count(species)
colnames(treated) <- c("species","treated")
tab2 <- merge(x = control, y = treated)
tab <- merge(x = tab1, y = tab2)
# Use flextable to render the summary table in a tidy format
ft <- flextable(tab)
# Use flextable to render the summary table in a tidy format
ft <- flextable(tab)
# Use flextable to render the summary table in a tidy format
ft <- flextable(tab)
install.packages("pacman", repos = "http://cran.us.r-project.org")
library(pacman)
# Use flextable to render the summary table in a tidy format
ft <- flextable(tab)
View(tab)
View(data)
View(data1)
View(data2)
# ggplot figure showing mean activity for each treatment (Control, OA) for each species.
ggplot(data2, aes(x = treatment, y = activity, color = treatment)) + geom_boxplot()
# ggplot figure showing mean activity for each treatment (Control, OA) for each species.
ggplot(data2, aes(x = treatment, y = activity, color = treatment)) + geom_boxplot() + facet_wrap(~species)
# ggplot figure showing mean activity for each treatment (Control, OA) for each species.
ggplot(data2, aes(x = treatment, y = activity, color = treatment)) + annotation_raster(rainbow, 15, 20, 3, 4) + geom_boxplot() + facet_wrap(~species)
# ggplot figure showing mean activity for each treatment (Control, OA) for each species.
ggplot(data2, aes(x = treatment, y = activity, color = treatment)) + annotation_raster(rainbow) + geom_boxplot() + facet_wrap(~species)
# Use ggsave to save the figure
getwd()
# Use ggsave to save the figure
getwd()
ggsave('output/figures/activity_by_treatment_species.png',width = 6, height = 8)
# ggplot figure showing mean activity for each treatment (Control, OA) for each species.
ggplot(data2, aes(x = treatment, y = activity, color = treatment)) + geom_boxplot() + facet_wrap(~species)
# Use ggsave to save the figure
getwd()
ggsave('output/figures/activity_by_treatment_species.png',width = 10, height = 6)
# ggplot figure showing mean activity for each treatment (Control, OA) for each species.
ggplot(data2, aes(x = treatment, y = activity, color = treatment)) + annotation_raster(rainbow, interpolate = FALSE) + geom_point() + facet_wrap(~species)
# ggplot figure showing mean activity for each treatment (Control, OA) for each species.
ggplot(data2, aes(x = treatment, y = activity, color = treatment)) +  geom_point() + facet_wrap(~species)
#something wrong with annotation_raster
# ggplot figure showing mean activity for each treatment (Control, OA) for each species.
ggplot(data2, aes(x = treatment, y = activity, color = treatment)) +  geom_point() + geom_jitter() facet_wrap(~species)
# ggplot figure showing mean activity for each treatment (Control, OA) for each species.
ggplot(data2, aes(x = treatment, y = activity, color = treatment)) +  geom_point() + geom_jitter() + facet_wrap(~species)
#something wrong with annotation_raster
# ggplot figure showing mean activity for each treatment (Control, OA) for each species.
ggplot(data2, aes(x = treatment, y = activity, color = treatment)) + annotation_raster(rainbow, interpolate = FALSE) + geom_point() + geom_jitter() + facet_wrap(~species)
